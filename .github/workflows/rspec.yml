# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: rspec and cypress

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        ports: ["5432:5432"]
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7.1

    - name: Install PostgreSQL client
      run: |
        sudo apt-get -yqq install libpq-dev

    - name: Build App
      env:
        PGHOST: localhost
        PGUSER: postgres
        RAILS_ENV: test
      run: |
        psql -c 'create database casa_test;' -U postgres
        psql -c 'create database casa_development;' -U postgres
        bundle install
        yarn
        bin/rails db:setup
        bundle exec rails webpacker:compile
        curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
        chmod +x ./cc-test-reporter
        ./cc-test-reporter before-build

    - name: Run rspec
      env:
        PGHOST: localhost
        PGUSER: postgres
        RAILS_ENV: test
      run: |
        RUBYOPT='-W:no-deprecated -W:no-experimental' bundle exec rspec

    - name: Run cypress
      env:
        PGHOST: localhost
        PGUSER: postgres
        RAILS_ENV: development
      run: |
        RUBYOPT='-W:no-deprecated -W:no-experimental' bundle exec rspec
        RAILS_ENV=test bundle exec rails server -b 0.0.0.0 -p 4040 -d
        RAILS_ENV=test bundle exec rake db:migrate
        RAILS_ENV=test bundle exec rake db:seed
        npm run test:cypress
        kill $(jobs -p) || true
        ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT

